name: CI pipeline for User Service
on:
  push:
  pull_request:
    branches: [master]

env:
  JWT_KEY: ${{ secrets.JWT_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Test and Build with Maven
        env:
          JWT_KEY: ${{ secrets.JWT_KEY }}
        run: mvn package

      - name: Upload artifact for container job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  container:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download code from repository to ci workspace
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: target/

      - name: Build Docker image
        run: |
          docker build -t user-service-docker-image .

      - name: Run Docker container
        env:
          JWT_KEY: ${{ secrets.JWT_KEY }}
        run: |
          docker run -d --name user-service-container -e JWT_KEY=$JWT_KEY user-service-docker-image

  sonarqube:
    if: github.event_name == 'pull_request' && github.base_ref == 'master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Build, test and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
        run: |
          mvn -B verify \
            org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
            -Dsonar.projectKey=user-service:User_Service \
            -Dsonar.organization=brryba \
            -Dsonar.coverage.exclusions=**/* \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -DskipTests